<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create the level
///Resize the room
room_width = (CELL_WIDTH / 16) * 720;
room_height = (CELL_HEIGHT / 16) * 720;

//Set the grid width and height

var width = room_width div CELL_WIDTH;
var height = room_height div CELL_HEIGHT;

//Create the grid
grid = ds_grid_create( width, height)

//Fill the grid with the VOID
ds_grid_set_region(grid, 0, 0, width -1, height -1,VOID);

//Randomize the World!
randomize(); 

//Create the controller in the center of the grid~
var cx = width div 2;
var cy = height div 2;

//Contoller rando Direction
var cdir = irandom(3);

// Odds variable for changing direction
var odds = 1

//Create the level using steps
repeat (1000) {
    //Place floor tile at controller pos
    grid[# cx, cy] = FLOOR
    
    //Rando direction of Controller
    if (irandom(odds) == odds) {
        cdir = irandom(3);
    }
    
    //Move controller
    var xdir = lengthdir_x(1, cdir * 90);
    var ydir = lengthdir_y(1, cdir * 90);
    cx += xdir;
    cy += ydir;
    
    //Make controller not move outside grid
    cx = clamp(cx, 1, width - 2);
    cy = clamp(cy, 1, height -2); 
}
//Add walls
for (var yy = 1; yy &lt; height -1; yy++) {
    
    for (var xx = 1; yy &lt; width -1; xx++) {
        
        if (grid[# xx, yy,] = FLOOR) {
            //Check for walls
             if (grid[# xx + 1, yy] != FLOOR) grid[# xx + 1, yy] = WALL;
             if (grid[# xx - 1, yy] != FLOOR) grid[# xx - 1, yy] = WALL;
             if (grid[# xx, yy + 1] != FLOOR) grid[# xx, yy + 1] = WALL;
             if (grid[# xx, yy - 1] != FLOOR) grid[# xx, yy - 1] = WALL;
                
        }
    }
}


//Draw level from grid
for (var yy = 0; yy &lt; height; yy++;) {
    
    for (var xx = 0; yy &lt; width; xx++) {
       
       if (grid[# xx, yy] == FLOOR){ 
        //Draw Floor
        tile_add(bg_floor, 0, 0, CELL_WIDTH, CELL_HEIGHT,xx * CELL_WIDTH, yy * CELL_HEIGHT, 0);
       }else if (grid[# xx, yy] == WALL) {
        //Draw Wall
        tile_add(bg_wall, 0, 0, CELL_WIDTH, CELL_HEIGHT,xx * CELL_WIDTH, yy * CELL_HEIGHT, 0);
       }
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Restart
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
